# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule ChildChainAPI.Api.ChildChain do
  @moduledoc """
  API calls for all endpoints tagged `ChildChain`.
  """

  alias ChildChainAPI.Connection
  import ChildChainAPI.RequestBuilder

  @doc """
  This endpoint retrieves a specific block from child chain by its hash which was published on root chain.

  ## Parameters

  - connection (ChildChainAPI.Connection): Connection to server
  - get_block_body_schema (GetBlockBodySchema): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %ChildChainAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec block_get(Tesla.Env.client(), ChildChainAPI.Model.GetBlockBodySchema.t(), keyword()) ::
          {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def block_get(connection, get_block_body_schema, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/block.get")
    |> add_param(:body, :body, get_block_body_schema)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end

  @doc """
  This endpoint submits a signed transaction to the child chain.
  Normally you should call the Watcher's Transaction - Submit instead of this. The Watcher's version performs various security and validation checks before submitting the transaction, so is much safer. However, if the Watcher is not available this version exists. 

  ## Parameters

  - connection (ChildChainAPI.Connection): Connection to server
  - transaction_submit_body_schema (TransactionSubmitBodySchema): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %ChildChainAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec submit(Tesla.Env.client(), ChildChainAPI.Model.TransactionSubmitBodySchema.t(), keyword()) ::
          {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def submit(connection, transaction_submit_body_schema, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/transaction.submit")
    |> add_param(:body, :body, transaction_submit_body_schema)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end
end
