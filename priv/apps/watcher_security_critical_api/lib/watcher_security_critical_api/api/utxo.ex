# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule WatcherSecurityCriticalAPI.Api.UTXO do
  @moduledoc """
  API calls for all endpoints tagged `UTXO`.
  """

  alias WatcherSecurityCriticalAPI.Connection
  import WatcherSecurityCriticalAPI.RequestBuilder

  @doc """
  Gets challenge data for a given utxo exit.
  Gets challenge data for a given utxo exit.

  ## Parameters

  - connection (WatcherSecurityCriticalAPI.Connection): Connection to server
  - utxo_position_body_schema (UtxoPositionBodySchema): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %WatcherSecurityCriticalAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec utxo_get_challenge_data(
          Tesla.Env.client(),
          WatcherSecurityCriticalAPI.Model.UtxoPositionBodySchema.t(),
          keyword()
        ) :: {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def utxo_get_challenge_data(connection, utxo_position_body_schema, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/utxo.get_challenge_data")
    |> add_param(:body, :body, utxo_position_body_schema)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end

  @doc """
  Gets exit data for a given utxo.
  Gets exit data for a given utxo.

  ## Parameters

  - connection (WatcherSecurityCriticalAPI.Connection): Connection to server
  - utxo_position_body_schema1 (UtxoPositionBodySchema1): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %WatcherSecurityCriticalAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec utxo_get_exit_data(Tesla.Env.client(), WatcherSecurityCriticalAPI.Model.UtxoPositionBodySchema1.t(), keyword()) ::
          {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def utxo_get_exit_data(connection, utxo_position_body_schema1, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/utxo.get_exit_data")
    |> add_param(:body, :body, utxo_position_body_schema1)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end
end
