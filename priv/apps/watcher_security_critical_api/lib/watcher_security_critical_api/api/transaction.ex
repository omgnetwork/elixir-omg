# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule WatcherSecurityCriticalAPI.Api.Transaction do
  @moduledoc """
  API calls for all endpoints tagged `Transaction`.
  """

  alias WatcherSecurityCriticalAPI.Connection
  import WatcherSecurityCriticalAPI.RequestBuilder

  @doc """
  Sends transaction to Child chain.
  Watcher passes signed transaction to the child chain only if it's secure, e.g. Watcher is fully synced, all operator blocks have been verified, transaction doesn't spend funds not yet mined...

  ## Parameters

  - connection (WatcherSecurityCriticalAPI.Connection): Connection to server
  - transaction_submit_body_schema (TransactionSubmitBodySchema): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %WatcherSecurityCriticalAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec submit(Tesla.Env.client(), WatcherSecurityCriticalAPI.Model.TransactionSubmitBodySchema.t(), keyword()) ::
          {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def submit(connection, transaction_submit_body_schema, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/transaction.submit")
    |> add_param(:body, :body, transaction_submit_body_schema)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end
end
