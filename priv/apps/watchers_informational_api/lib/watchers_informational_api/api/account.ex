# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule WatchersInformationalAPI.Api.Account do
  @moduledoc """
  API calls for all endpoints tagged `Account`.
  """

  alias WatchersInformationalAPI.Connection
  import WatchersInformationalAPI.RequestBuilder

  @doc """
  Returns the balance of each currency for the given account address.

  ## Parameters

  - connection (WatchersInformationalAPI.Connection): Connection to server
  - address_body_schema (AddressBodySchema): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %WatchersInformationalAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec account_get_balance(Tesla.Env.client(), WatchersInformationalAPI.Model.AddressBodySchema.t(), keyword()) ::
          {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def account_get_balance(connection, address_body_schema, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/account.get_balance")
    |> add_param(:body, :body, address_body_schema)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end

  @doc """
  Gets a list of transactions for given account address.

  ## Parameters

  - connection (WatchersInformationalAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :get_all_transactions_body_schema (GetAllTransactionsBodySchema): 
  ## Returns

  {:ok, %WatchersInformationalAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec account_get_transactions(Tesla.Env.client(), keyword()) :: {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def account_get_transactions(connection, opts \\ []) do
    optional_params = %{
      :GetAllTransactionsBodySchema => :body
    }

    %{}
    |> method(:post)
    |> url("/account.get_transactions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end

  @doc """
  Gets all utxos belonging to the given address.

  ## Parameters

  - connection (WatchersInformationalAPI.Connection): Connection to server
  - address_body_schema1 (AddressBodySchema1): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %WatchersInformationalAPI.Model.Map{}} on success
  {:error, info} on failure
  """
  @spec account_get_utxos(Tesla.Env.client(), WatchersInformationalAPI.Model.AddressBodySchema1.t(), keyword()) ::
          {:ok, Map.t()} | {:error, Tesla.Env.t()}
  def account_get_utxos(connection, address_body_schema1, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/account.get_utxos")
    |> add_param(:body, :body, address_body_schema1)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {500, false}
    ])
  end
end
