version: "3.7"
services:
  elixir-omg:
    build: .
    image: elixir-omg:dockercompose
    environment:
      DATABASE_URL: postgres://omisego_dev:omisego_dev@postgres:5432/omisego_dev
    volumes:
      - .:/home/elixir-user/elixir-omg
  watcher:
    environment:
      - DD_DISABLED=false
    # labels:
    #   local.development.of: "watcher"
    #   local.development.from: "ino"
    labels:
      my.custom.label.project: 'projectA'
      my.custom.label.version: '1'
    depends_on:
      - datadog
  childchain:
    environment:
      - DD_DISABLED=false
    labels:
      local.development.of: "child_chain"
      local.development.from: "ino"
    #depends_on:
     #  - datadog

  datadog:
    image: datadog/agent:latest
    restart: always
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      #- DD_DOGSTATSD_TAGS=["env:local_development"]
      - DD_DOCKER_LABELS_AS_TAGS='{"com.docker.compose.service":"service_name","my.custom.label.project":"projecttag","my.custom.label.version":"versiontag"}'
      - DD_LOG_LEVEL=debug
#      - DD_AC_INCLUDE="image:watcher image:childchain"
#      - DD_AC_EXCLUDE="image:*"
      - DOCKER_CONTENT_TRUST=1
      - DD_APM_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    ports:
      - "80:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125/udp"
      - "8126:8126/tcp"
