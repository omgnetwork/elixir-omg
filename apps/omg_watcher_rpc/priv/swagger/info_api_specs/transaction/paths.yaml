transaction.all:
  post:
    tags:
      - Transaction
    summary: Gets all transactions (can be limited with various filters).
    description: >
      Digests the details of the transaction, by listing the value of outputs, aggregated by currency.
      Intended to be used when presenting the little details about multiple transactions.
      For all details queries to `/transaction.get` should be made using the transaction's hash provided.
    operationId: transactions_all
    requestBody:
      $ref: 'request_bodies.yaml#/GetAllTransactionsBodySchema'
    responses:
      200:
        $ref: 'responses.yaml#/GetAllTransactionsResponse'
      500:
        $ref: '../responses.yaml#/InternalServerError'

transaction.create:
    post:
      tags:
        - Transaction
      summary: Finds an optimal way to construct a transaction spending particular amount.
      description: >
        Given token, amount and spender, finds spender's inputs sufficient to perform a payment.
        If also provided with receiver's address, creates and encodes a transaction.
      operationId: createTransaction
      requestBody:
        $ref: 'request_bodies.yaml#/CreateTransactionsBodySchema'
      responses:
        200:
          $ref: 'responses.yaml#/CreateTransactionResponse'
        500:
          $ref: '../responses.yaml#/InternalServerError'

transaction.merge:
    post:
      tags:
        - Transaction
      summary: Constructs merge transactions.
      description: |
        - Given address and currency parameters, returns a list of merge transactions for correspondng 
        UTXOs – grouped in ascending order of value. 
        - Given between two and four UTXO positions, returns a merge transaction for the corresponding
        UTXOs. (These UTXOs must have the same owner and currency)
      operationId: mergeTransaction
      requestBody:
        $ref: 'request_bodies.yaml#/MergeTransactionsBodySchema'
      responses:
        200:
          $ref: 'responses.yaml#/MergeTransactionResponse'
        500:
          $ref: '../responses.yaml#/InternalServerError'

transaction.get:
  post:
    tags:
      - Transaction
    summary: Gets a transaction with the given id.
    operationId: transaction_get
    requestBody:
      $ref: 'request_bodies.yaml#/GetTransactionBodySchema'
    responses:
      200:
        $ref: 'responses.yaml#/GetTransactionResponse'
      500:
        $ref: '../responses.yaml#/InternalServerError'

transaction.submit_typed:
  post:
    tags:
      - Transaction
    summary: Sends EIP-712 formatted transaction to Child chain.
    description: >
        Request to this method is the same as to Web3 `eth_signTypedData` with additional `signatures` array.
        The `/transaction.create` `typed_data` field can be used to prepare transaction. The same conditions
        are met as with security-critical `/transaction.submit`
    operationId: submit_typed
    requestBody:
      $ref: 'request_bodies.yaml#/TransactionSubmitTypedBodySchema'
    responses:
      200:
        $ref: '../../security_critical_api_specs/transaction/responses.yaml#/TransactionSubmitResponse'
      500:
        $ref: '../responses.yaml#/InternalServerError'

transaction.get_by_position:
  post:
    tags:
      - Transaction
    summary: Gets a transaction with the given position (block number, transaction index).
    description: __Not implemented yet, proposed in OMG-364__
    operationId: get_transaction_by_pos
    requestBody:
      $ref: 'request_bodies.yaml#/GetTransactionByPosBodySchema'
    responses:
      200:
        $ref: 'responses.yaml#/GetTransactionResponse'
      500:
        $ref: '../responses.yaml#/InternalServerError'
