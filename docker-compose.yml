version: "2.3"
services:
  postgres:
    image: postgres:9.6.13-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: omisegodev
      POSTGRES_PASSWORD: omisegodev
    volumes:
      - ./docker/create_databases.sql:/docker-entrypoint-initdb.d/create_databases.sql
    healthcheck:
      test: pg_isready -U omisego_dev
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      chain_net:
        ipv4_address: 172.27.0.107

  geth:
    image: ethereum/client-go:v1.9.12
    entrypoint:
      - /bin/sh
      - -c
      - |
          apk add --update curl
          # Configures geth with the deployer and authority accounts. This includes:
          #   1. Configuring the deployer's keystore
          #   2. Configuring the authority's keystore
          #   3. Configuring the keystores' password
          #   4. Unlocking the accounts by their indexes
          # CAREFUL with --allow-insecure-unlock!
          echo "" > /tmp/geth-blank-password
          # Starts geth
          # Websocket is not used by the applications but enabled for debugging/testing convenience
          geth --miner.gastarget 7500000 \
            --miner.gasprice "10" \
            --nodiscover \
            --maxpeers 0 \
            --datadir data/ \
            --syncmode 'full' \
            --networkid 1337 \
            --keystore=./data/geth/keystore/ \
            --password /tmp/geth-blank-password \
            --unlock "0,1" \
            --rpc --rpcapi personal,web3,eth,net --rpcaddr 0.0.0.0 --rpcvhosts=* --rpcport=8545 \
            --ws --wsaddr 0.0.0.0 --wsorigins='*' \
            --mine \
            --allow-insecure-unlock
    ports:
      - "8555:8545"
      - "8556:8546"
    expose:
      - "8546"
      - "8545"
    volumes:
      - ./data:/data
    healthcheck:
      test: curl localhost:8545
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      chain_net:
        ipv4_address: 172.27.0.101

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8545:80
      - 8546:81
      - 443:443
    healthcheck:
      test: curl nginx:80
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      chain_net:
        ipv4_address: 172.27.0.102

  childchain:
    image: omisego/child_chain:latest
    command: "full_local"
    container_name: childchain
    env_file:
      - ./localchain_contract_addresses.env
      - ./fees_setup.env
    environment:
      - ETHEREUM_NETWORK=LOCALCHAIN
      - ETHEREUM_RPC_URL=http://172.27.0.102:80
      - APP_ENV=local_docker_development
      - DD_HOSTNAME=datadog
      - DD_DISABLED=true
      - DB_PATH=/data
      - ETHEREUM_EVENTS_CHECK_INTERVAL_MS=800
      - ETHEREUM_STALLED_SYNC_THRESHOLD_MS=20000
      - LOGGER_BACKEND=console
      - RELEASE_COOKIE=development
      - NODE_HOST=127.0.0.1
    restart: always
    ports:
      - "9656:9656"
    expose:
      - "9656"
    volumes:
      - ./data:/data
      - ./priv/dev-artifacts:/dev-artifacts
    healthcheck:
      test: curl localhost:9656
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      nginx:
        condition: service_healthy
    networks:
      chain_net:
        ipv4_address: 172.27.0.103

  watcher:
    image: omisego/watcher:latest
    command: "full_local"
    container_name: watcher
    env_file:
      - ./localchain_contract_addresses.env
    environment:
      - ETHEREUM_NETWORK=LOCALCHAIN
      - ETHEREUM_RPC_URL=http://172.27.0.102:80
      - CHILD_CHAIN_URL=http://172.27.0.103:9656
      - PORT=7434
      - APP_ENV=local_docker_development
      - DD_HOSTNAME=datadog
      - DD_DISABLED=true
      - DB_PATH=/data
      - ETHEREUM_EVENTS_CHECK_INTERVAL_MS=800
      - ETHEREUM_STALLED_SYNC_THRESHOLD_MS=20000
      - ETHEREUM_BLOCK_TIME_SECONDS=1
      - EXIT_PROCESSOR_SLA_MARGIN=5520
      - EXIT_PROCESSOR_SLA_MARGIN_FORCED=TRUE
      - LOGGER_BACKEND=console
      - RELEASE_COOKIE=development
      - NODE_HOST=127.0.0.1
    restart: always
    ports:
      - "7434:7434"
    expose:
      - "7434"
    volumes:
      - ./data:/data
    healthcheck:
      test: curl localhost:7434
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    depends_on:
      childchain:
        condition: service_healthy
    networks:
      chain_net:
        ipv4_address: 172.27.0.104

  watcher_info:
    image: omisego/watcher_info:latest
    command: "full_local"
    container_name: watcher_info
    env_file:
      - ./localchain_contract_addresses.env
    environment:
      - ETHEREUM_NETWORK=LOCALCHAIN
      - ETHEREUM_RPC_URL=http://172.27.0.102:80
      - CHILD_CHAIN_URL=http://172.27.0.103:9656
      - DATABASE_URL=postgresql://omisego_dev:omisego_dev@172.27.0.107:5432/omisego_dev
      - PORT=7534
      - APP_ENV=local_docker_development
      - DD_HOSTNAME=datadog
      - DD_DISABLED=true
      - DB_PATH=/data
      - ETHEREUM_EVENTS_CHECK_INTERVAL_MS=800
      - ETHEREUM_BLOCK_TIME_SECONDS=1
      - EXIT_PROCESSOR_SLA_MARGIN=5520
      - EXIT_PROCESSOR_SLA_MARGIN_FORCED=TRUE
      - LOGGER_BACKEND=console
      - RELEASE_COOKIE=development
      - NODE_HOST=127.0.0.1
    restart: always
    ports:
      - "7534:7534"
    expose:
      - "7534"
    volumes:
      - ./data:/data
    healthcheck:
      test: curl localhost:7534
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    depends_on:
      childchain:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      chain_net:
        ipv4_address: 172.27.0.105

networks:
  chain_net:
    driver: bridge
    ipam:
      config:
      - subnet: 172.27.0.0/24
