version: "2.3"
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/geth_nginx.conf:/etc/nginx/server_config/geth.conf:ro
    ports:
      - 9656:9656
      - 8545:80
      - 8546:81
      - 443:443
    healthcheck:
      test: curl geth:80
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      chain_net:
        ipv4_address: 172.27.0.108

  postgres:
    image: postgres:9.6.13-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: omisegodev
      POSTGRES_PASSWORD: omisegodev
    volumes:
      - ./docker/create_databases.sql:/docker-entrypoint-initdb.d/create_databases.sql
    healthcheck:
      test: pg_isready -U omisego_dev
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      chain_net:
        ipv4_address: 172.27.0.107

  feefeed:
    image: omisego/feefeed_mock:latest
    volumes:
      - ./docker/static_feefeed/:/www-data/
    ports:
      - "4000:80"
    expose:
      - "4000"
    networks:
      chain_net:
        ipv4_address: 172.27.0.110
  # feefeed:
  #   image: gcr.io/omisego-development/feefeed:latest
  #   command: "start"
  #   container_name: feefeed
  #   environment:
  #     - GITHUB_TOKEN=""
  #     - GITHUB_ORGANISATION=omgnetwork
  #     - GITHUB_REPO=fee-rules-public
  #     - SENTRY_DSN=""
  #     - GITHUB_BRANCH=master
  #     - RULES_FETCH_INTERVAL=200
  #     - RATES_FETCH_INTERVAL=200
  #     - GITHUB_FILENAME=fee_rules
  #     - DATABASE_URL=postgresql://feefeed:feefeed@172.27.0.107:5432/feefeed
  #     - SECRET_KEY_BASE="Y8naENMR8b+vbPHILjwNtEfWFrnbGi2k+UYWm75VnKHfsavmyGLtTmmeJxAGK+zJ"
  #     - DATADOG_DISABLED=true
  #     - DATADOG_HOST="localhost"
  #     - ETHEREUM_NODE_URL=http://172.27.0.108:80
  #   ports:
  #     - "4000:4000"
  #   expose:
  #     - "4000"
  #   depends_on:
  #     - postgres
  #   restart: always
  #   networks:
  #     chain_net:
  #       ipv4_address: 172.27.0.110

  geth:
    image: ethereum/client-go:v1.9.15
    entrypoint: /bin/sh -c ". data/command"
    environment:
      RPC_PORT: 8545
    ports:
      - "8555:8545"
      - "8556:8546"
    expose:
      - "8546"
      - "8545"
    volumes:
      - ./data:/data
      - ./docker/geth/command:/data/command
      - ./docker/geth/geth-blank-password:/data/geth-blank-password
    healthcheck:
      test: curl localhost:8545
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      chain_net:
        ipv4_address: 172.27.0.101

  childchain:
    image: omisego/child_chain:latest
    command: "full_local"
    container_name: childchain
    env_file:
      - ./localchain_contract_addresses.env
      - ./fees_setup.env
    environment:
      - ETHEREUM_NETWORK=LOCALCHAIN
      - ETHEREUM_RPC_URL=http://172.27.0.108:80
      - APP_ENV=local_docker_development
      - DD_HOSTNAME=datadog
      - DD_DISABLED=true
      - DB_PATH=/data
      - ETHEREUM_EVENTS_CHECK_INTERVAL_MS=800
      - ETHEREUM_STALLED_SYNC_THRESHOLD_MS=20000
      - LOGGER_BACKEND=console
      - RELEASE_COOKIE=development
      - NODE_HOST=127.0.0.1
    restart: always
    volumes:
      - ./data:/data
      - ./priv/dev-artifacts:/dev-artifacts
    healthcheck:
      test: curl localhost:9656
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      - nginx
      - geth
    networks:
      chain_net:
        ipv4_address: 172.27.0.103

  watcher:
    image: omisego/watcher:latest
    command: "full_local"
    container_name: watcher
    env_file:
      - ./localchain_contract_addresses.env
    environment:
      - ETHEREUM_NETWORK=LOCALCHAIN
      - ETHEREUM_RPC_URL=http://172.27.0.108:80
      - CHILD_CHAIN_URL=http://172.27.0.108:9656
      - PORT=7434
      - APP_ENV=local_docker_development
      - DD_HOSTNAME=datadog
      - DD_DISABLED=true
      - DB_PATH=/data
      - ETHEREUM_EVENTS_CHECK_INTERVAL_MS=800
      - ETHEREUM_STALLED_SYNC_THRESHOLD_MS=20000
      - ETHEREUM_BLOCK_TIME_SECONDS=1
      - EXIT_PROCESSOR_SLA_MARGIN=5520
      - EXIT_PROCESSOR_SLA_MARGIN_FORCED=TRUE
      - LOGGER_BACKEND=console
      - RELEASE_COOKIE=development
      - NODE_HOST=127.0.0.1
    restart: always
    ports:
      - "7434:7434"
    expose:
      - "7434"
    volumes:
      - ./data:/data
    healthcheck:
      test: curl localhost:7434
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    depends_on:
      childchain:
        condition: service_healthy
    networks:
      chain_net:
        ipv4_address: 172.27.0.104

  watcher_info:
    image: omisego/watcher_info:latest
    command: "full_local"
    container_name: watcher_info
    env_file:
      - ./localchain_contract_addresses.env
    environment:
      - ETHEREUM_NETWORK=LOCALCHAIN
      - ETHEREUM_RPC_URL=http://172.27.0.108:80
      - CHILD_CHAIN_URL=http://172.27.0.108:9656
      - DATABASE_URL=postgresql://omisego_dev:omisego_dev@172.27.0.107:5432/omisego_dev
      - PORT=7534
      - APP_ENV=local_docker_development
      - DD_HOSTNAME=datadog
      - DD_DISABLED=true
      - DB_PATH=/data
      - ETHEREUM_EVENTS_CHECK_INTERVAL_MS=800
      - ETHEREUM_BLOCK_TIME_SECONDS=1
      - EXIT_PROCESSOR_SLA_MARGIN=5520
      - EXIT_PROCESSOR_SLA_MARGIN_FORCED=TRUE
      - LOGGER_BACKEND=console
      - RELEASE_COOKIE=development
      - NODE_HOST=127.0.0.1
    restart: always
    ports:
      - "7534:7534"
    expose:
      - "7534"
    volumes:
      - ./data:/data
    healthcheck:
      test: curl localhost:7534
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    depends_on:
      childchain:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      chain_net:
        ipv4_address: 172.27.0.105

networks:
  chain_net:
    driver: bridge
    ipam:
      config:
      - subnet: 172.27.0.0/24
